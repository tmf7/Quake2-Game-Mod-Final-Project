ON DECK:

-> flyer just pivots in place when close-ish to ground in hostmode, but moves away fine if released unharmed

-> when changing areas drop the husk, host, and follower

-> slightly adjust each vertical pixel count for the soul abilities in host mode (last one overlaps just a bit)

-> soul abilities and collection NOT PERSISTANT between areas/levels (fix that)

-> soul abilities etc not SAVED ( in save.c )

___________________________
TODO:

-> make it a COMPETITIVE co-op game: you kill eachothers bodies/husks with monsters for FRAGS, first to 10 wins
	--> have to progress to find more monsters to use AND level up to more effectively kill opponent
	--> supress in SP_ or delete all weapon/ammo stuff so it never even spawns? ( that'd break normal DM )
	--> frags hud element
	--> spawn in ANY area of a level ( allow teleport to area w/clients if in an empty one )
	--> how does Q2 handle coop area/level change???
	--> co-op DM start as far away from other clients as possible ( within an area ) ( use monster spawnpoints )
	--> flesh out other uberhosts
	--> make non-ghost clients that approach each other get pushed back and svc_temp_entity an explosion in-between ( no touching )
	--> check win-condition and end game
	
-> test co-op for ent visible ( hud stuff, ghost stuff, print stuff ), and if only the user can see the detect-life lines

-> husk holds a weapon (ideally that looks like the players current weapon)...meh ( stuck on generic weapon...but works in coop...WHAT? )
	--> REASONING: the player doesn't have a per-weapon worldmodel in first person
	--> or maybe the skinnum isnt resoved in the way I think it is
	--> IT WORKS UPON PLAYER RESPAWN! (except the effect)

___________________________________________________________


BUG: currently RANDOMLY crashes after getting stuck when using the host_target mod for the SV_MoveStep function in m_move.c ( for flyers )
	--> maybe because a host_target is assigned via rodeo, then it finds its own enemy (or something) such that the uberhost/rodeo information is jumbled
	--> and/or null inappropriately

BUG: ducks TOO MUCH/REPEATEDLY ... right into floors if duck, then duck-shoot ( bbox lowerd, then again )
	// specifically write a new duck move (if the monster has the animations )
	// set an array, make a callback to it, declare in possessed.h
	// check if the host is already ducked/standing before performing the move/transition
	-->Idea: use duck and jump for the same type of swimming move the player does for the flying monsters in uberhost

BUG(?): crash when monster has enemy ( player ) and host says hi, then drops the follower with "stay" command
	--> or not, that one's hard to replicate

BUG(?): changing areas/levels crash if:
	--> active follower
	--> another player has a host
____________________________________________________________

f = "ghost"
r = "inhabit"
v = "uberhost" & "drain_life"
y = "soul_shield"
mouse3 = "push_beasts" (and hostspeak)
mouse1 = attack (and hostspeak)

o = "transform"
n = "detect_life"
m = "ghost_fly"

F7 = "soul_abilities"
F8 = "soul_collection"

cheatcode: soullevel [1-5] ( default displays usage )

cheatcode: give souls ### ( sets the current pool_of_souls )

_____________________________________________________________
		// add a teleportation effect
		self->s.event = EV_PLAYER_TELEPORT;

______________________________________________________________
FIXED BUG:

-> third person cam fidgets up and down rapidly
	--> Player camera figet was because ent->client->ps.pmove.gravity affected the pmove[z] after ThirdPerson call
		---> setting pmove.gravit 0 in ThirdPerson fixes this
	--> host camera figet was because of self->s.origin[2] = host->absmin[2] - self->mins[2]; in monster_think_possessed
		---> using the host origin and mins explicitly ( instead of absmin )fixes this
	--> flipper/flyer continuous drop then return to top caused by player origin continuously falling due to no groundentity yet following host origin
		---> setting pmove.gravity = 0 for ClientThink in hostmode fixes this
	--> All three of these solutions avoid the bigger issue of misaligned origins to begin with
		---> the better soluitons would be to fix the player origin better in hostmode and do the ThirdPerson call AFTER ALL gravity is resolved
	--> BONUS: doing a full pmove in ThirdPerson actually keeps the camera in thirdperson upon player death; NOT forces pmove back to first person

