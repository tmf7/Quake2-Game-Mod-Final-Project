ON DECK:

-> naturalSpawns needs to be actively updated game-side, then pulled in server/client-side, THEN checked
	--> player currently shows exactly the names needed

-> fly/swim needs an ENEMY to do a vertical move up/down, CHANGE THAT ( especially for uberhost/followers )
	--> currently set enemy = benign host_target and viola... doesn't seem to attack the light, but also never actually touches it like it should
	--> write a new M_WalkMove that takes a vec3_t instead of just yaw and pass that to SV_MoveStep to create the new potential origin
	--> only problem is that everyone would fly....no, just check for FL_FLY|FL_SWIM ( and groundEntity ) and clamp accordingly
	--> MAY EXPLAIN WHY A POSSESSED FLYER causes a crash if its enemy explodes/is freed like a barrel is


->(1of2): getRidOfWeapon ==> gunindex = 0 still allows firing ( yet newweapon = NULL crashes ) => replace weaponthink qualifiers (ghostmode, hostmode)

->(2of2): if a husk is active between scenes/levels then notarget remains active despite ghostmode deactiveating and husk disappearing
	-> flags get saved into savedFlags in PERSISTANT DATA
	-> solution: actively clear the husk between scenes

-> soul abilities and collection NOT PERSISTANT between areas/levels (fix that)

-> soul abilities etc not SAVED ( in save.c )

___________________________
TODO:

-> make it a COMPETITIVE co-op game: you kill eachothers bodies/husks with monsters for FRAGS, first to 10 wins
	--> have to progress to find more monsters to use AND level up to more effectively kill opponent
	--> supress in SP_ or delete all weapon/ammo stuff so it never even spawns? ( that'd break normal DM )
	--> frags hud element
	--> spawn in ANY area of a level ( allow teleport to area w/clients if in an empty one )
	--> how does Q2 handle coop area/level change???
	--> co-op DM start as far away from other clients as possible ( within an area ) ( use monster spawnpoints )
	--> flesh out other uberhosts
	--> make non-ghost clients that approach each other get pushed back and svc_temp_entity an explosion in-between ( no touching )
	--> check win-condition and end game
	
-> give drain life an effect in 3rd person ( so its obvious )

-> test co-op for ent visible ( hud stuff, ghost stuff ), and if only the user can see the detect-life lines

-> develop proper third person chasecam (note: the client is the human view, the player is the entity being moved around)

--> make installation README ( not a batch )

-> husk holds a weapon (ideally that looks like the players current weapon)...meh ( stuck on super shotgun...but works in coop...WHAT? )
	--> REASONING: the player doesn't have a per-weapon worldmodel in first person

___________________________________________________________

BUG: jorg doesn't spawn a soul because it doesn't call killed it calls spawnmakron
	--> i think...
	--> things do randomly not spawn a soul
	--> try moving the spawn call

BUG: carry over of old edict_t data from prior spawn ( function pointers, etc ) that may cause crashes

BUG: index overflow "crash" related to SV_FindIndex in sv_init.c call: out of bounds for model/sound/image index....wtf why?
	--> spawning a monster only creates new configstrings if they don't exist ( is there a permap limit? instead of the global 256? )
	--> may be due to edict_t carryover info not matching field numbers
	--> edited SV_FindIndex overflow error to specify type: playtested => at some point after rank 5 spawn there is a SOUND index overflow
	--> the MAX_SOUNDS is PER MAP, so each time i spawn a new monster type new sound, image, and model index configstrings are added to the server's set
	--> which means it overflows as soon as enough different monster types are spawned


BUG(?): changing areas/levels with an active follower crash ???

*BUG: the player does not appear translucent ( nor does the husk, which is correct ) 
	--> tested in coop SOLUTION: change effect?

*BUG: fix the clip into walls/ceilings when the host dies

BUG: death next to a barrel crash ( flyer )

BUG: host PITCH changes too much 
	--> solution: clamp the v_angle OR proper chasecam may resolve the issue
	--> ALSO: set pitch and roll to zero when dropping host ( to prevent permalean )

BUG: ducks TOO MUCH/REPEATEDLY ... right into floors if duck, then duck-shoot ( bbox lowerd, then again )
	// specifically write a new duck move (if the monster has the animations )
	// set an array, make a callback to it, declare in possessed.h
	// check if the host is already ducked/standing before performing the move/transition
____________________________________________________________

f = "ghost"
r = "inhabit"
v = "uberhost" & "drain_life"
y = "soul_shield"
mouse3 = "push_beasts" (and hostspeak)
mouse1 = attack (and hostspeak)

o = "transform"
n = "detect_life"
m = "ghost_fly"

F7 = "soul_abilities"
F8 = "soul_collection"

cheatcode: soullevel [1-5] ( default displays usage )

cheatcode: give souls ### ( sets the current pool_of_souls )

______________________________________________

EXTRA:

->allow host persistance between levels/areas 
	--> spawn a husk near the new player spawn point
	--> spawn same class as old host and TakeHost
	--> only when able to warp_husk at higher levels